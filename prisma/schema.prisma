generator client {
  provider = "prisma-client-js"
}  

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_NEON")
}

model Productos {
  id              Int     @id @default(autoincrement())
  nombre          String
  descripcion     String?
  precio          String
  id_marca        Int
  id_proveedor    Int
  id_categoria    Int
  id_animal       Int
  imagen          String?
  cantidad        String
  id_tipoCantidad Int
  codigo_barras   String? @unique

  venta_granel  Boolean
  precio_granel String?

  marca        CatalogoMarca        @relation(fields: [id_marca], references: [id_marca])
  proveedor    CatalogoProveedor    @relation(fields: [id_proveedor], references: [id_proveedor])
  categoria    CatalogoCategoria    @relation(fields: [id_categoria], references: [id_categoria])
  animal       CatalagoAnimal       @relation(fields: [id_animal], references: [id_categoria])
  tipoCantidad CatalogoTipoCantidad @relation(fields: [id_tipoCantidad], references: [id_tipoCantidad])

  inventario        Inventario[]
  inventario_granel inventario_granel[]
  detallesVenta     DetalleVenta[]
}

model CatalogoProveedor {
  id_proveedor Int     @id @default(autoincrement())
  nombre       String  @unique
  nomenclatura String  @unique
  direccion    String
  ciudad       String
  estado       String
  telefono     String
  email        String?

  productos Productos[]
}

model CatalogoTipoCantidad {
  id_tipoCantidad Int    @id @default(autoincrement())
  nombre          String @unique
  nomenclatura    String @unique

  productos Productos[]
}

model CatalogoMarca {
  id_marca     Int    @id @default(autoincrement())
  nombre       String @unique
  nomenclatura String @unique

  productos Productos[]
}

model CatalogoCategoria {
  id_categoria Int    @id @default(autoincrement())
  nombre       String @unique
  nomenclatura String @unique

  productos Productos[]
}

model CatalagoAnimal {
  id_categoria Int    @id @default(autoincrement())
  nombre       String
  nomenclatura String

  productos Productos[]
}

model Inventario {
  id_inventario Int    @id @default(autoincrement())
  id_producto   Int    @unique
  existencias   String
  StockMinimo   String
  StockMaximo   String

  producto Productos @relation(fields: [id_producto], references: [id])

  detalleVentaPorcion DetalleVentaPorcion[]
}

model DetalleVenta {
  id_detalleVenta  Int     @id @default(autoincrement())
  id_venta         Int     
  id_producto      Productos[]
  cantidad_vendida String
  precio_producto  String
  subtotal         String
  venta_granel     Boolean

}

model DetalleVentaPorcion {
  id_detalleVentaPorcion  Int @id @default(autoincrement())
  id_detalleVenta         Int
  id_producto             Int
  cantidad_producto       Int
  cantidad_granel_vendida Int
  subtotal                Int

  Venta         Venta?       @relation(fields: [ventaId_venta], references: [id_venta])
  ventaId_venta Int?
  Productos     Inventario?  @relation(fields: [id_producto], references: [id_producto])
}

model inventario_granel {
  id_inventario_granel Int    @id @default(autoincrement())
  id_producto          Int    @unique
  cantidad_producto    String
  cantidad_restante    String

  producto Productos @relation(fields: [id_producto], references: [id])
}

model Venta {
  id_venta    Int    @id @default(autoincrement())
  id_vendedor Int
  id_sucursal Int
  fecha_venta String
  total_venta String
  subtotal    String
  iva         String

  sucursal             Sucursal              @relation(fields: [id_sucursal], references: [id_sucursal])
  vendedor             CatalogoVendedor      @relation(fields: [id_vendedor], references: [id_vendedor])
  detallesVentaPorcion DetalleVentaPorcion[]
}

model CatalogoVendedor {
  id_vendedor  Int     @id @default(autoincrement())
  id_usuario   Int
  acronimo     String  @unique
  permisoVenta Boolean

  usuario User    @relation(fields: [id_usuario], references: [id_usuario])
  ventas  Venta[]
}

model Sucursal {
  id_sucursal  Int    @id @default(autoincrement())
  nombre       String
  direccion    String
  ciudad       String
  estado       String
  codigoPostal String
  telefono     String
  encargado    String

  ventas Venta[]
}

model User {
  id_usuario Int     @id @default(autoincrement())
  email      String  @unique
  password   String
  nombre     String
  apellido   String
  telefono   String
  direccion  String
  imagen     String?

  vendedor CatalogoVendedor[]
}
